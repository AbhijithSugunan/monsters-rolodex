{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.componet.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handleSearch","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAKN,EAAMG,QAAQI,aCJdC,EAAW,SAACR,GACvB,OACA,qBAAKC,UAAU,YAAf,SAEMD,EAAMS,SAASC,KAAI,SAACP,GAAD,OACf,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNlBO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCJKG,E,kDACnB,aAAc,IAAD,8BACX,gBAaFC,aAAe,SAACC,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJJ,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACV,SAAWmB,S,+BAOhC,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAa,kBAAoBC,aAAcgB,KAAKZ,eAC/D,cAAC,EAAD,CAAUR,SAAUqB,W,GA1BKI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d83a3e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{ props.monster.email }</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n  return(\r\n  <div className=\"card-list\">\r\n    {\r\n        props.monsters.map((monster) => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n  </div>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className='search'\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import  { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.componet\"\nimport { SearchBox } from './components/search-box/search-box.component'\n\nexport default class App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(user => this.setState({monsters : user}))\n  }\n\n  handleSearch = (e) => {\n   this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder={\"Search Monsters\"}  handleChange={this.handleSearch}/>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}